{"ast":null,"code":"var _jsxFileName = \"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport \"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const history = useHistory(); // React States\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  useEffect(() => {// sessionStorage.getItem('username') ?  <Navbar></Navbar> : undefined \n  });\n  console.log(\"localStorage: \" + localStorage.getItem('username'));\n  localStorage.removeItem('u');\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = async event => {\n    //Prevent page reload\n    event.preventDefault(); // User Login info\n\n    const database = await axios.get('http://localhost:3000/users/');\n    console.log(\"database: \" + database);\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // Find user login info\n\n    const userData = database.data.find(user => user.username === uname.value); // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        sessionStorage.setItem('username', userData.username);\n        setIsSubmitted(true);\n        history.push('/home');\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username: admin123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password: admin123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 32\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"3PJZqQar9VUlevtRkha+4Ijzu+g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/login.js"],"names":["React","useState","useEffect","useHistory","axios","Login","history","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","console","log","localStorage","getItem","removeItem","errors","uname","pass","handleSubmit","event","preventDefault","database","get","document","forms","userData","data","find","user","username","value","password","name","message","sessionStorage","setItem","push","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\nimport \"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/styles.css\";\n\nfunction Login() {\n\n    const history = useHistory();\n\n    // React States\n    const [errorMessages, setErrorMessages] = useState({});\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    useEffect(() =>{\n       // sessionStorage.getItem('username') ?  <Navbar></Navbar> : undefined \n    })\nconsole.log(\"localStorage: \"+localStorage.getItem('username'))\nlocalStorage.removeItem('u')\n\n    const errors = {\n        uname: \"invalid username\",\n        pass: \"invalid password\"\n    };\n\n    const handleSubmit = async (event) => {\n\n        //Prevent page reload\n        event.preventDefault();\n\n        // User Login info\n        const database = await axios.get('http://localhost:3000/users/');\n\n        console.log(\"database: \" + database)\n\n        var { uname, pass } = document.forms[0];\n\n        // Find user login info\n\n        const userData = database.data.find((user) => user.username === uname.value);\n\n        // Compare user info\n        if (userData) {\n            if (userData.password !== pass.value) {\n                // Invalid password\n                setErrorMessages({ name: \"pass\", message: errors.pass });\n            } else {\n                sessionStorage.setItem('username', userData.username);\n                setIsSubmitted(true);\n                history.push('/home')\n                \n            }\n        } else {\n            // Username not found\n            setErrorMessages({ name: \"uname\", message: errors.uname });\n        }\n    };\n\n    // Generate JSX code for error message\n    const renderErrorMessage = (name) =>\n        name === errorMessages.name && (\n            <div className=\"error\">{errorMessages.message}</div>\n        );\n\n    // JSX code for login form\n    const renderForm = (\n        <div className=\"form\">\n            <label>Username: admin123</label>\n            <br></br>\n            <label>Password: admin123</label>\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                    <label>Username </label>\n                    <input type=\"text\" name=\"uname\"  required />\n                    {renderErrorMessage(\"uname\")}\n                </div>\n                <div className=\"input-container\">\n                    <label>Password </label>\n                    <input type=\"password\" name=\"pass\" required />\n                    {renderErrorMessage(\"pass\")}\n                </div>\n                <div className=\"button-container\">\n                    <input type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div className=\"app\">\n            <h3>Login</h3>\n            <div className=\"login-form\">\n                <div className=\"title\">Sign In</div>\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}