{"ast":null,"code":"var _jsxFileName = \"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport \"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const history = useHistory(); // React States\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false); // User Login info\n  //   const database = [\n  //     {\n  //       username: \"user1\",\n  //       password: \"pass1\"\n  //     },\n  //     {\n  //       username: \"user2\",\n  //       password: \"pass2\"\n  //     }\n  //   ];\n\n  useEffect(() => {\n    //passing getData method to the lifecycle method\n    database();\n  }, []);\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    const database = async () => {\n      const res = await axios.get('http://localhost:3000/users/');\n      console.log(res.data);\n    };\n\n    console.log(\"database: \" + database.data); //Prevent page reload\n\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // Find user login info\n\n    const userData = database.data.find(user => user.username === uname.value); // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n        history.push('/home');\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3PJZqQar9VUlevtRkha+4Ijzu+g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login; // import React, { useState } from \"react\";\n// import axios from 'axios'\n// import { useHistory } from \"react-router-dom\";\n// const Login = ({setLoginUser}) => {\n//     const history = useHistory();\n//     const [user, setUser] = useState({\n//         username: \"\",\n//         password: \"\"\n//     })\n//     const handleChange = e => {\n//         const { username, value } = e.target\n//         setUser({ ...user, [username]: value })\n//     }\n//     const OnClickLogin = async () => {\n//         console.log('Username: ' + user.username);\n//         console.log('Password: ' + user.password);\n//         // const credentials = {\n//         //     username: \"admin123\",\n//         //     password: \"admin123\"\n//         // }\n//         await axios.post('http://localhost:3000/login/', user).then(function (response) {\n//             console.log(response);\n//             setLoginUser(response)\n//           })\n//           .catch(function (error) {\n//             console.log(error);\n//           });\n//         console.log('login cliked!')\n//         // localStorage.setItem(credentials)\n//        // history.push('/home')\n//     }\n//     return (\n//         <div className='ui container'>\n//             <h3>B2 Connect  Login</h3>\n//             <form action=\"/login\" method=\"post\" className=\"ui form\" style={{ textAlign: 'center' }}>\n//                 <div>\n//                     <label>Login credentials below</label>\n//                 </div>\n//                 <div className=\"field\" >\n//                     <input placeholder=\"Username\" style={{ width: '300px' }} onChange={handleChange} />\n//                 </div>\n//                 <div className=\"field\">\n//                     <input placeholder=\"Password\" type=\"password\" style={{ width: '300px' }} onChange={handleChange} /></div>\n//                 <div className=\"field\">\n//                 </div><button className=\"ui button\" type=\"button\" onClick={OnClickLogin}>Sign In</button>\n//             </form>\n//         </div>\n//     )\n// }\n// export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/login.js"],"names":["React","useState","useEffect","ReactDOM","useHistory","axios","Login","history","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","errors","uname","pass","handleSubmit","event","res","get","console","log","data","preventDefault","document","forms","userData","find","user","username","value","password","name","message","push","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport \"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/styles.css\";\n\nfunction Login() {\n\n    const history = useHistory();\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // User Login info\n//   const database = [\n//     {\n//       username: \"user1\",\n//       password: \"pass1\"\n//     },\n//     {\n//       username: \"user2\",\n//       password: \"pass2\"\n//     }\n//   ];\n\n\n\n\n  useEffect(() => {\n\t\t//passing getData method to the lifecycle method\n\t\tdatabase()\n\t}, [])\n \n\n\n\n\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n \n\n \n\n  \n\n  const handleSubmit = (event) => {\n      const database = async () =>{\n    const res =await axios.get('http://localhost:3000/users/');\n    console.log(res.data)\n    \n  }\n      console.log(\"database: \"+database.data)\n    //Prevent page reload\n    event.preventDefault();\n\n    var { uname, pass } = document.forms[0];\n\n    // Find user login info\n    const userData = database.data.find((user) => user.username === uname.value);\n\n    // Compare user info\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({ name: \"pass\", message: errors.pass });\n      } else {\n        setIsSubmitted(true);\n        history.push('/home')\n      }\n    } else {\n      // Username not found\n      setErrorMessages({ name: \"uname\", message: errors.uname });\n    }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n    );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Username </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"button-container\">\n          <input type=\"submit\" />\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"login-form\">\n        <div className=\"title\">Sign In</div>\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n\n// import React, { useState } from \"react\";\n// import axios from 'axios'\n// import { useHistory } from \"react-router-dom\";\n\n// const Login = ({setLoginUser}) => {\n\n//     const history = useHistory();\n//     const [user, setUser] = useState({\n//         username: \"\",\n//         password: \"\"\n//     })\n//     const handleChange = e => {\n//         const { username, value } = e.target\n\n//         setUser({ ...user, [username]: value })\n//     }\n\n//     const OnClickLogin = async () => {\n\n//         console.log('Username: ' + user.username);\n//         console.log('Password: ' + user.password);\n\n//         // const credentials = {\n//         //     username: \"admin123\",\n//         //     password: \"admin123\"\n//         // }\n//         await axios.post('http://localhost:3000/login/', user).then(function (response) {\n//             console.log(response);\n//             setLoginUser(response)\n//           })\n//           .catch(function (error) {\n//             console.log(error);\n//           });\n\n       \n//         console.log('login cliked!')\n       \n//         // localStorage.setItem(credentials)\n\n//        // history.push('/home')\n\n//     }\n\n\n\n\n\n\n//     return (\n//         <div className='ui container'>\n//             <h3>B2 Connect  Login</h3>\n//             <form action=\"/login\" method=\"post\" className=\"ui form\" style={{ textAlign: 'center' }}>\n//                 <div>\n\n//                     <label>Login credentials below</label>\n//                 </div>\n//                 <div className=\"field\" >\n//                     <input placeholder=\"Username\" style={{ width: '300px' }} onChange={handleChange} />\n//                 </div>\n//                 <div className=\"field\">\n//                     <input placeholder=\"Password\" type=\"password\" style={{ width: '300px' }} onChange={handleChange} /></div>\n//                 <div className=\"field\">\n//                 </div><button className=\"ui button\" type=\"button\" onClick={OnClickLogin}>Sign In</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default Login;"]},"metadata":{},"sourceType":"module"}