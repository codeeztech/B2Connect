[{"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/index.js":"1","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/App.js":"2","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/utils.js":"3","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Dashboard.js":"4","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/main.js":"5","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/login.js":"6","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/about.js":"7","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/user-management.js":"8","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/navbar.js":"9","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/logout.js":"10"},{"size":225,"mtime":1649618880563,"results":"11","hashOfConfig":"12"},{"size":4662,"mtime":1649634431841,"results":"13","hashOfConfig":"12"},{"size":810,"mtime":1612939160000,"results":"14","hashOfConfig":"12"},{"size":555,"mtime":1612939160000,"results":"15","hashOfConfig":"12"},{"size":848,"mtime":1649634973760,"results":"16","hashOfConfig":"12"},{"size":3098,"mtime":1649634131504,"results":"17","hashOfConfig":"12"},{"size":431,"mtime":1649634451998,"results":"18","hashOfConfig":"12"},{"size":2617,"mtime":1649634472929,"results":"19","hashOfConfig":"12"},{"size":890,"mtime":1649634321524,"results":"20","hashOfConfig":"12"},{"size":195,"mtime":1649633806685,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"qeccxz",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/index.js",["48"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Main from './main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["49","50"],"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/App.js",["51","52"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { formatData } from \"./utils\";\nimport axios from 'axios'\nimport \"./styles.css\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Router/navbar\";\n\nexport default function App() {\n\n  //Geo location Task 1\n  const userData = async () => {\n    const res = await axios.get('http://localhost:3000/users/')\n    console.log(res.data)\n  }\n\n  useEffect(() => {\n    //passing getData method to the lifecycle method\n    userData()\n  }, [])\n\n  const [data, setIP] = useState('');\n\n  //creating function to load geo location information by ip address from the API\n  const getData = async () => {\n    const res = await axios.get('https://geolocation-db.com/json/')\n    console.log(res.data);\n    setIP(res.data)\n  }\n\n  useEffect(() => {\n    //passing getData method to the lifecycle method\n    getData()\n  }, [])\n\n  // Data Visualization Task 2\n\n  const [currencies, setcurrencies] = useState([]);\n  const [pair, setpair] = useState(\"\");\n  const [price, setprice] = useState(\"0.00\");\n  const [pastData, setpastData] = useState({});\n  const ws = useRef(null);\n\n  let first = useRef(false);\n  const url = \"https://api.pro.coinbase.com\";\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n    let pairs = [];\n\n    const apiCall = async () => {\n      await fetch(url + \"/products\")\n        .then((res) => res.json())\n        .then((data) => (pairs = data));\n\n      let filtered = pairs.filter((pair) => {\n        if (pair.quote_currency === \"USD\") {\n          return pair;\n        }\n      });\n\n      filtered = filtered.sort((a, b) => {\n        if (a.base_currency < b.base_currency) {\n          return -1;\n        }\n        if (a.base_currency > b.base_currency) {\n          return 1;\n        }\n        return 0;\n      });\n\n      setcurrencies(filtered);\n\n      first.current = true;\n    };\n\n    apiCall();\n  }, []);\n\n  useEffect(() => {\n    if (!first.current) {\n      return;\n    }\n\n    let msg = {\n      type: \"subscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let jsonMsg = JSON.stringify(msg);\n    ws.current.send(jsonMsg);\n\n    let historicalDataURL = `${url}/products/${pair}/candles?granularity=86400`;\n    const fetchHistoricalData = async () => {\n      let dataArr = [];\n      await fetch(historicalDataURL)\n        .then((res) => res.json())\n        .then((data) => (dataArr = data));\n\n      let formattedData = formatData(dataArr);\n      setpastData(formattedData);\n    };\n\n    fetchHistoricalData();\n\n    ws.current.onmessage = (e) => {\n      let data = JSON.parse(e.data);\n      if (data.type !== \"ticker\") {\n        return;\n      }\n\n      if (data.product_id === pair) {\n        setprice(data.price);\n      }\n    };\n  }, [pair]);\n\n  const handleSelect = (e) => {\n    let unsubMsg = {\n      type: \"unsubscribe\",\n      product_ids: [pair],\n      channels: [\"ticker\"]\n    };\n    let unsub = JSON.stringify(unsubMsg);\n\n    ws.current.send(unsub);\n\n    setpair(e.target.value);\n  };\n  return (\n\n    <div className=\"container\">\n<Navbar></Navbar>\n      <div className=\"App\">\n        <h2>Your current geo location is</h2>\n\n        <div role=\"list\" class=\"ui list\">\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\" >IP Address</div>{data.IPv4}</div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">City</div>{data.city}</div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">Country Code</div>{data.country_code}</div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">Country Name</div>{data.country_name}\n          </div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">Latitude</div>{data.latitude}\n          </div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">Longitude</div>{data.longitude}\n          </div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">State</div>{data.state}\n          </div>\n          <div role=\"listitem\" class=\"item\">\n            <div class=\"header font\">Postal</div>{data.postal}\n          </div>\n        </div>\n\n      </div>\n\n      {\n        <select name=\"currency\" value={pair} onChange={handleSelect}>\n          {currencies.map((cur, idx) => {\n            return (\n              <option key={idx} value={cur.id}>\n                {cur.display_name}\n              </option>\n            );\n          })}\n        </select>\n      }\n      <Dashboard price={price} data={pastData} />\n    </div>\n\n  );\n}\n","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/utils.js",[],"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Dashboard.js",["53"],"import React, { useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction Dashboard({ price, data }) {\n  const opts = {\n    tooltips: {\n      intersect: false,\n      mode: \"index\"\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  if (price === \"0.00\") {\n    return <h2>please select a currency pair</h2>;\n  }\n  return (\n    <div className=\"dashboard\">\n      <h2>{`$${price}`}</h2>\n\n      <div className=\"chart-container\">\n        <Line data={data} options={opts} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/main.js",["54"],"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/login.js",[],"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/about.js",[],"/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/user-management.js",["55","56"],"import React, { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios'\nimport Navbar from \"./navbar\";\n\nconst UserManagement = () => {\n\n    const [data, setUsers] = useState([]);\n\n    const userData = async () => {\n        const res = await axios.get('http://localhost:3000/users/')\n        console.log(res.data);\n        setUsers(res.data)\n    }\n\n    useEffect(() => {\n        //passing getData method to the lifecycle method\n        userData()\n    }, [])\n\n\n    const [dataRole, setRoles] = useState([]);\n\n    const roleData = async () => {\n        const res = await axios.get('http://localhost:3000/roles/')\n        console.log(res.data);\n        setRoles(res.data)\n    }\n\n    useEffect(() => {\n        //passing getData method to the lifecycle method\n        roleData()\n    }, [])\n\n\n    return (\n        <div>\n            <Navbar></Navbar>\n               <h2>Users List</h2>\n                          <div>  \n                        <table class=\"ui celled table\">\n                            <thead class=\"\">\n                                <tr class=\"\">\n                                    <th class=\"\">User ID</th>\n                                    <th class=\"\">Username</th>\n                                    <th class=\"\">Password</th>\n                                    <th class=\"\">Name</th>\n                                    <th class=\"\">Role ID</th>\n                                    <th class=\"\">Created Date</th>\n                                    <th class=\"\">Updated Date</th>\n\n                                </tr>\n                            </thead>\n                            <tbody class=\"\">\n                                {\n                            data.map((user) => {\n                    return (\n                                <tr class=\"\" key={user._id}>\n                                    <td class=\"\">{user._id}</td>\n                                    <td class=\"\">{user.username}</td>\n                                    <td class=\"\">{user.password}</td>\n                                    <td class=\"\">{user.name}</td>\n                                    <td class=\"\">{user.roleId}</td>\n                                    <td class=\"\">{user.createdAt}</td>\n                                    <td class=\"\">{user.updatedAt}</td>\n                                </tr>\n                                 )\n                                })\n                            }\n                            </tbody>\n                        </table>\n                        </div>\n                   \n            \n        </div>\n    )\n}\n\nexport default UserManagement;","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/navbar.js",["57"],"import React from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\n\nconst Navbar = (props) => {\n\t// console.log(props)\n\t// setTimeout(() =>{\n\t// \tprops.history.push('/home')\n\t// },3000);\n\treturn(\n\t\t<nav className='ui raised very padded segment' >\n\t\t\t<a className='ui teal inverted segment' >B2 Connect</a>\n\t\t\t<div className='ui right floated header'>\n\t\t\t\t\n\t\t\t\t<button className='ui button'><NavLink to=\"/home\">Data Visualization</NavLink></button>\n                <button className='ui button'><Link to=\"/user\">User Management</Link></button>\n\t\t\t\t<button className='ui button'><NavLink to=\"/about\">About</NavLink></button>\n                <button className='ui button'><NavLink to=\"/logout\">Logout</NavLink></button>\n\t\t\t\t{/* <button className='ui button'><NavLink to=\"/contact\">Contact</NavLink></button> */}\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nexport default withRouter(Navbar);","/Users/mms/Documents/Development/githubs-projects/React-Chart/src/components/Router/logout.js",[],{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":11},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":57,"column":42,"nodeType":"69","messageId":"70","endLine":57,"endColumn":44},{"ruleId":"58","severity":1,"message":"71","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":23},{"ruleId":"58","severity":1,"message":"66","line":2,"column":40,"nodeType":"60","messageId":"61","endLine":2,"endColumn":48},{"ruleId":"58","severity":1,"message":"71","line":1,"column":38,"nodeType":"60","messageId":"61","endLine":1,"endColumn":44},{"ruleId":"58","severity":1,"message":"72","line":21,"column":12,"nodeType":"60","messageId":"61","endLine":21,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":11,"column":4,"nodeType":"75","endLine":11,"endColumn":45},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'Redirect' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useRef' is defined but never used.","'dataRole' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]